// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Blog post model
model Post {
  id            String     @id @default(cuid())
  slug          String     @unique
  title         String     @db.VarChar(500)
  excerpt       String     @db.Text
  content       String     @db.LongText
  featuredImage String     @db.VarChar(500)
  published     Boolean    @default(false)
  date          DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  readTime      Int?
  views         Int        @default(0)
  authorId      String
  author        Author     @relation(fields: [authorId], references: [id])
  categoryId    String
  category      Category   @relation(fields: [categoryId], references: [id])
  tags          PostTags[]
  postViews     PostView[]
}

// Blog post author
model Author {
  id     String  @id @default(cuid())
  name   String  @db.VarChar(255)
  email  String  @unique @db.VarChar(255)
  avatar String? @db.VarChar(500)
  bio    String? @db.Text
  posts  Post[]
}

// Blog post category
model Category {
  id    String @id @default(cuid())
  name  String @unique
  slug  String @unique
  posts Post[]
}

// Blog post tag
model Tag {
  id    String     @id @default(cuid())
  name  String     @unique
  slug  String     @unique
  posts PostTags[]
}

// Many-to-many relationship between posts and tags
model PostTags {
  postId String
  post   Post   @relation(fields: [postId], references: [id])
  tagId  String
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@id([postId, tagId])
}

// Post view tracking for analytics
model PostView {
  id        String   @id @default(cuid())
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  ipAddress String?  @db.VarChar(45)
  userAgent String?  @db.Text
  viewedAt  DateTime @default(now())

  @@index([postId])
  @@index([viewedAt])
}

// Site settings model
model Setting {
  id    String @id @default(cuid())
  key   String @unique @db.VarChar(255)
  value String @db.Text
  type  String @default("string") @db.VarChar(50) // string, number, boolean, json
  
  @@index([key])
}
